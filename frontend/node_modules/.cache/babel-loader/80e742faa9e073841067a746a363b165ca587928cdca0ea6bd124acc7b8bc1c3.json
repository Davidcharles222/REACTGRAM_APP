{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport photoService from \"../services/photoService\";\nconst initialState = {\n  photos: [],\n  photo: {},\n  error: false,\n  success: false,\n  loading: false,\n  message: null\n};\n\n// Publish user photo\nexport const publishPhoto = createAsyncThunk(\"photo/publish\", async (photo, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.publishPhoto(photo, token);\n\n  // check for erros\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Get user photos\nexport const getUserPhotos = createAsyncThunk(\"photo/userphotos\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.getUserPhotos(id, token);\n  return data;\n});\n\n// Detele photos user\nexport const deletePhoto = createAsyncThunk(\"photo/delete\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.deletePhoto(id, token);\n\n  // check for erros\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Update a photo\nexport const updatePhoto = createAsyncThunk(\"photo/update\", async (photoData, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.updatePhoto({\n    title: photoData.title\n  }, photoData.id, token);\n\n  // check for erros\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Get a photo by id\nexport const getPhotoId = createAsyncThunk(\"photo/getPhotoId\", async (id, thunkAPI) => {\n  const token = thunkAPI.getState.auth.user.token;\n  const data = await photoService.getPhotoId(id, token);\n\n  // check for erros\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// funcoes\nexport const photoSlice = createSlice({\n  name: \"photo\",\n  initialState,\n  reducers: {\n    resetMessage: state => {\n      state.message = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(publishPhoto.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(publishPhoto.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photo = action.payload;\n      state.photos.unshift(state.photo);\n      state.message = \"Foto publicada com sucesso!\";\n    }).addCase(publishPhoto.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.photo = action.payload;\n    }).addCase(getUserPhotos.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(getUserPhotos.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photos = action.payload;\n    }).addCase(deletePhoto.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(deletePhoto.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photos = state.photos.filter(photo => {\n        return photo._id !== action.payload.id;\n      });\n      state.message = action.payload.message;\n    }).addCase(deletePhoto.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.photo = {};\n    }).addCase(updatePhoto.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(updatePhoto.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photos = state.photos.map(photo => {\n        if (photo._id === action.payload.photo._id) {\n          return photo.title = action.payload.photo.title;\n        }\n        return photo;\n      });\n      state.message = action.payload.message;\n    }).addCase(updatePhoto.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.photo = {};\n    });\n  }\n});\nexport const {\n  resetMessage\n} = photoSlice.actions;\nexport default photoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","photoService","initialState","photos","photo","error","success","loading","message","publishPhoto","thunkAPI","token","getState","auth","user","data","errors","rejectWithValue","getUserPhotos","id","deletePhoto","updatePhoto","photoData","title","getPhotoId","photoSlice","name","reducers","resetMessage","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","unshift","rejected","filter","_id","map","actions","reducer"],"sources":["C:/Users/rosi_/OneDrive/Área de Trabalho/React/12_REACTGRAM/frontend/src/slices/photoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport photoService from \"../services/photoService\";\r\n\r\nconst initialState = {\r\n  photos: [],\r\n  photo: {},\r\n  error: false,\r\n  success: false,\r\n  loading: false,\r\n  message: null,\r\n};\r\n\r\n// Publish user photo\r\nexport const publishPhoto = createAsyncThunk(\r\n  \"photo/publish\",\r\n  async (photo, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await photoService.publishPhoto(photo, token);\r\n\r\n    // check for erros\r\n    if (data.errors) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n// Get user photos\r\nexport const getUserPhotos = createAsyncThunk(\r\n  \"photo/userphotos\",\r\n  async (id, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await photoService.getUserPhotos(id, token);\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n// Detele photos user\r\nexport const deletePhoto = createAsyncThunk(\r\n  \"photo/delete\",\r\n  async (id, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await photoService.deletePhoto(id, token);\r\n\r\n    // check for erros\r\n    if (data.errors) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n// Update a photo\r\nexport const updatePhoto = createAsyncThunk(\r\n  \"photo/update\",\r\n  async (photoData, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await photoService.updatePhoto(\r\n      {title: photoData.title},\r\n      photoData.id,\r\n      token,\r\n    );\r\n\r\n    // check for erros\r\n    if (data.errors) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n// Get a photo by id\r\nexport const getPhotoId = createAsyncThunk(\r\n  \"photo/getPhotoId\",\r\n  async(id, thunkAPI) => {\r\n    const token = thunkAPI.getState.auth.user.token\r\n\r\n    const data = await photoService.getPhotoId(id, token)\r\n\r\n\r\n    \r\n    // check for erros\r\n    if (data.errors) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n  \r\n    return data;\r\n  }\r\n\r\n)\r\n\r\n// funcoes\r\nexport const photoSlice = createSlice({\r\n  name: \"photo\",\r\n  initialState,\r\n  reducers: {\r\n    resetMessage: (state) => {\r\n      state.message = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(publishPhoto.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n      })\r\n      .addCase(publishPhoto.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.photo = action.payload;\r\n        state.photos.unshift(state.photo);\r\n        state.message = \"Foto publicada com sucesso!\";\r\n      })\r\n      .addCase(publishPhoto.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.photo = action.payload;\r\n      })\r\n      .addCase(getUserPhotos.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n      })\r\n      .addCase(getUserPhotos.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.photos = action.payload;\r\n      })\r\n      .addCase(deletePhoto.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n      })\r\n      .addCase(deletePhoto.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n\r\n        state.photos = state.photos.filter((photo) => {\r\n          return photo._id !== action.payload.id;\r\n        });\r\n\r\n        state.message = action.payload.message;\r\n      })\r\n      .addCase(deletePhoto.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.photo = {};\r\n      })\r\n      .addCase(updatePhoto.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n      })\r\n      .addCase(updatePhoto.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        \r\n        state.photos = state.photos.map((photo) => {\r\n          if (photo._id === action.payload.photo._id) {\r\n            return (photo.title = action.payload.photo.title);\r\n          }\r\n\r\n          return photo\r\n        });\r\n\r\n        state.message = action.payload.message;\r\n      })\r\n      .addCase(updatePhoto.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.photo = {};\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetMessage } = photoSlice.actions;\r\nexport default photoSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}