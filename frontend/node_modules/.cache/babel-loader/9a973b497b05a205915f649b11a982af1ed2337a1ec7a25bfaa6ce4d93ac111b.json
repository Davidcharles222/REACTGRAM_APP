{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport photoService from \"../services/photoService\";\nconst initialState = {\n  photos: [],\n  photo: {},\n  error: false,\n  success: false,\n  loading: false,\n  message: null\n};\n\n// Publish user photo\nexport const publishPhoto = createAsyncThunk(\"photo/publish\", async (photo, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await photoService.publishPhoto(photo, token);\n\n  // check for erros\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\n\n// Get user photos\nconst getUserPhotos = async id => {\n  const config = reque;\n};\n\n// funcoes\nexport const photoSlice = createSlice({\n  name: \"photo\",\n  initialState,\n  reducers: {\n    resetMessage: state => {\n      state.message = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(publishPhoto.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(publishPhoto.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.photo = action.payload;\n      state.photos.unshift(state.photo);\n      state.message = \"Foto publicada com sucesso!\";\n    }).addCase(publishPhoto.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.photo = action.payload;\n    });\n  }\n});\nexport const {\n  resetMessage\n} = photoSlice.actions;\nexport default photoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","photoService","initialState","photos","photo","error","success","loading","message","publishPhoto","thunkAPI","token","getState","auth","user","data","errors","rejectWithValue","getUserPhotos","id","config","reque","photoSlice","name","reducers","resetMessage","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","unshift","rejected","actions","reducer"],"sources":["C:/Users/rosi_/OneDrive/Área de Trabalho/React/12_REACTGRAM/frontend/src/slices/photoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport photoService from \"../services/photoService\";\r\n\r\nconst initialState = {\r\n  photos: [],\r\n  photo: {},\r\n  error: false,\r\n  success: false,\r\n  loading: false,\r\n  message: null,\r\n};\r\n\r\n// Publish user photo\r\nexport const publishPhoto = createAsyncThunk(\r\n  \"photo/publish\",\r\n  async (photo, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await photoService.publishPhoto(photo, token);\r\n\r\n    // check for erros\r\n    if (data.errors) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n// Get user photos\r\nconst getUserPhotos = async (id) => {\r\n  const config = reque\r\n}\r\n\r\n// funcoes\r\nexport const photoSlice = createSlice({\r\n  name: \"photo\",\r\n  initialState,\r\n  reducers: {\r\n    resetMessage: (state) => {\r\n      state.message = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(publishPhoto.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n      })\r\n      .addCase(publishPhoto.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.photo = action.payload;\r\n        state.photos.unshift(state.photo);\r\n        state.message = \"Foto publicada com sucesso!\";\r\n      })\r\n      .addCase(publishPhoto.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.photo = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetMessage } = photoSlice.actions;\r\nexport default photoSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,YAAY,MAAM,0BAA0B;AAEnD,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,CAAC,CAAC;EACTC,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGT,gBAAgB,CAC1C,eAAe,EACf,OAAOI,KAAK,EAAEM,QAAQ,KAAK;EACzB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK;EAEjD,MAAMI,IAAI,GAAG,MAAMd,YAAY,CAACQ,YAAY,CAACL,KAAK,EAAEO,KAAK,CAAC;;EAE1D;EACA,IAAII,IAAI,CAACC,MAAM,EAAE;IACf,OAAON,QAAQ,CAACO,eAAe,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EACjD;EAEA,OAAOD,IAAI;AACb,CACF,CAAC;;AAED;AACA,MAAMG,aAAa,GAAG,MAAOC,EAAE,IAAK;EAClC,MAAMC,MAAM,GAAGC,KAAK;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAGvB,WAAW,CAAC;EACpCwB,IAAI,EAAE,OAAO;EACbrB,YAAY;EACZsB,QAAQ,EAAE;IACRC,YAAY,EAAGC,KAAK,IAAK;MACvBA,KAAK,CAAClB,OAAO,GAAG,IAAI;IACtB;EACF,CAAC;EACDmB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,YAAY,CAACqB,OAAO,EAAGJ,KAAK,IAAK;MACxCA,KAAK,CAACnB,OAAO,GAAG,IAAI;MACpBmB,KAAK,CAACrB,KAAK,GAAG,KAAK;IACrB,CAAC,CAAC,CACDwB,OAAO,CAACpB,YAAY,CAACsB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAClDN,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAACpB,OAAO,GAAG,IAAI;MACpBoB,KAAK,CAACrB,KAAK,GAAG,IAAI;MAClBqB,KAAK,CAACtB,KAAK,GAAG4B,MAAM,CAACC,OAAO;MAC5BP,KAAK,CAACvB,MAAM,CAAC+B,OAAO,CAACR,KAAK,CAACtB,KAAK,CAAC;MACjCsB,KAAK,CAAClB,OAAO,GAAG,6BAA6B;IAC/C,CAAC,CAAC,CACDqB,OAAO,CAACpB,YAAY,CAAC0B,QAAQ,EAAE,CAACT,KAAK,EAAEM,MAAM,KAAK;MACjDN,KAAK,CAACnB,OAAO,GAAG,KAAK;MACrBmB,KAAK,CAACrB,KAAK,GAAG2B,MAAM,CAACC,OAAO;MAC5BP,KAAK,CAACtB,KAAK,GAAG4B,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAa,CAAC,GAAGH,UAAU,CAACc,OAAO;AAClD,eAAed,UAAU,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}